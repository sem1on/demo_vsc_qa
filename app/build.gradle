plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java-library'
    id'io.qameta.allure' version '2.12.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

allure {
    version.set("2.30.0")
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(
        // https://mvnrepository.com/artifact/com.codeborne/selenide
        "com.codeborne:selenide:7.6.1",
        "io.qameta.allure:allure-selenide:2.29.0",
        "org.junit.jupiter:junit-jupiter:5.9.3",
        "org.slf4j:slf4j-simple:2.0.7",
        "io.rest-assured:rest-assured:5.5.0",
        "io.rest-assured:json-schema-validator:5.5.0",
        "io.qameta.allure:allure-rest-assured:2.19.0"
    ) 
    // libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'demo_vsc.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

test {
//    systemProperty "chromeoptions.prefs", "intl.accept_languages=en"
    useJUnitPlatform()
}
